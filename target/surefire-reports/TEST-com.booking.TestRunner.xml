<?xml version="1.0" encoding="UTF-8"?>
<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report-3.0.xsd" version="3.0" name="com.booking.TestRunner" time="82.234" tests="20" errors="0" skipped="0" failures="1">
  <properties>
    <property name="java.specification.version" value="24"/>
    <property name="sun.cpu.isalist" value="amd64"/>
    <property name="sun.jnu.encoding" value="Cp1252"/>
    <property name="java.class.path" value="C:\Users\HP\IdeaProjects\API_Testing_Kata\target\test-classes;C:\Users\HP\IdeaProjects\API_Testing_Kata\target\classes;C:\Users\HP\.m2\repository\io\rest-assured\rest-assured\5.5.5\rest-assured-5.5.5.jar;C:\Users\HP\.m2\repository\org\apache\groovy\groovy\4.0.22\groovy-4.0.22.jar;C:\Users\HP\.m2\repository\org\apache\groovy\groovy-xml\4.0.22\groovy-xml-4.0.22.jar;C:\Users\HP\.m2\repository\org\apache\httpcomponents\httpclient\4.5.13\httpclient-4.5.13.jar;C:\Users\HP\.m2\repository\org\apache\httpcomponents\httpcore\4.4.13\httpcore-4.4.13.jar;C:\Users\HP\.m2\repository\commons-logging\commons-logging\1.2\commons-logging-1.2.jar;C:\Users\HP\.m2\repository\commons-codec\commons-codec\1.11\commons-codec-1.11.jar;C:\Users\HP\.m2\repository\org\apache\httpcomponents\httpmime\4.5.13\httpmime-4.5.13.jar;C:\Users\HP\.m2\repository\org\hamcrest\hamcrest\2.2\hamcrest-2.2.jar;C:\Users\HP\.m2\repository\org\ccil\cowan\tagsoup\tagsoup\1.2.1\tagsoup-1.2.1.jar;C:\Users\HP\.m2\repository\io\rest-assured\json-path\5.5.5\json-path-5.5.5.jar;C:\Users\HP\.m2\repository\org\apache\groovy\groovy-json\4.0.22\groovy-json-4.0.22.jar;C:\Users\HP\.m2\repository\io\rest-assured\rest-assured-common\5.5.5\rest-assured-common-5.5.5.jar;C:\Users\HP\.m2\repository\io\rest-assured\xml-path\5.5.5\xml-path-5.5.5.jar;C:\Users\HP\.m2\repository\org\apache\commons\commons-lang3\3.16.0\commons-lang3-3.16.0.jar;C:\Users\HP\.m2\repository\io\rest-assured\json-schema-validator\5.5.5\json-schema-validator-5.5.5.jar;C:\Users\HP\.m2\repository\com\github\java-json-tools\json-schema-validator\2.2.14\json-schema-validator-2.2.14.jar;C:\Users\HP\.m2\repository\com\github\java-json-tools\jackson-coreutils-equivalence\1.0\jackson-coreutils-equivalence-1.0.jar;C:\Users\HP\.m2\repository\com\github\java-json-tools\jackson-coreutils\2.0\jackson-coreutils-2.0.jar;C:\Users\HP\.m2\repository\com\github\java-json-tools\msg-simple\1.2\msg-simple-1.2.jar;C:\Users\HP\.m2\repository\com\github\java-json-tools\btf\1.3\btf-1.3.jar;C:\Users\HP\.m2\repository\com\github\java-json-tools\json-schema-core\1.2.14\json-schema-core-1.2.14.jar;C:\Users\HP\.m2\repository\com\github\java-json-tools\uri-template\0.10\uri-template-0.10.jar;C:\Users\HP\.m2\repository\org\mozilla\rhino\1.7.7.2\rhino-1.7.7.2.jar;C:\Users\HP\.m2\repository\com\sun\mail\mailapi\1.6.2\mailapi-1.6.2.jar;C:\Users\HP\.m2\repository\joda-time\joda-time\2.10.5\joda-time-2.10.5.jar;C:\Users\HP\.m2\repository\com\googlecode\libphonenumber\libphonenumber\8.11.1\libphonenumber-8.11.1.jar;C:\Users\HP\.m2\repository\com\google\code\findbugs\jsr305\3.0.2\jsr305-3.0.2.jar;C:\Users\HP\.m2\repository\net\sf\jopt-simple\jopt-simple\5.0.4\jopt-simple-5.0.4.jar;C:\Users\HP\.m2\repository\com\google\guava\guava\33.2.1-jre\guava-33.2.1-jre.jar;C:\Users\HP\.m2\repository\com\google\guava\failureaccess\1.0.2\failureaccess-1.0.2.jar;C:\Users\HP\.m2\repository\com\google\guava\listenablefuture\9999.0-empty-to-avoid-conflict-with-guava\listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar;C:\Users\HP\.m2\repository\org\checkerframework\checker-qual\3.42.0\checker-qual-3.42.0.jar;C:\Users\HP\.m2\repository\com\google\j2objc\j2objc-annotations\3.0.0\j2objc-annotations-3.0.0.jar;C:\Users\HP\.m2\repository\io\cucumber\cucumber-java\7.18.0\cucumber-java-7.18.0.jar;C:\Users\HP\.m2\repository\io\cucumber\cucumber-core\7.18.0\cucumber-core-7.18.0.jar;C:\Users\HP\.m2\repository\io\cucumber\cucumber-gherkin\7.18.0\cucumber-gherkin-7.18.0.jar;C:\Users\HP\.m2\repository\io\cucumber\cucumber-gherkin-messages\7.18.0\cucumber-gherkin-messages-7.18.0.jar;C:\Users\HP\.m2\repository\io\cucumber\gherkin\28.0.0\gherkin-28.0.0.jar;C:\Users\HP\.m2\repository\io\cucumber\messages\24.1.0\messages-24.1.0.jar;C:\Users\HP\.m2\repository\io\cucumber\testng-xml-formatter\0.1.0\testng-xml-formatter-0.1.0.jar;C:\Users\HP\.m2\repository\io\cucumber\query\12.2.0\query-12.2.0.jar;C:\Users\HP\.m2\repository\io\cucumber\tag-expressions\6.1.0\tag-expressions-6.1.0.jar;C:\Users\HP\.m2\repository\io\cucumber\cucumber-expressions\17.1.0\cucumber-expressions-17.1.0.jar;C:\Users\HP\.m2\repository\io\cucumber\datatable\7.18.0\datatable-7.18.0.jar;C:\Users\HP\.m2\repository\io\cucumber\cucumber-plugin\7.18.0\cucumber-plugin-7.18.0.jar;C:\Users\HP\.m2\repository\io\cucumber\docstring\7.18.0\docstring-7.18.0.jar;C:\Users\HP\.m2\repository\io\cucumber\html-formatter\21.3.1\html-formatter-21.3.1.jar;C:\Users\HP\.m2\repository\io\cucumber\junit-xml-formatter\0.4.0\junit-xml-formatter-0.4.0.jar;C:\Users\HP\.m2\repository\io\cucumber\ci-environment\10.0.1\ci-environment-10.0.1.jar;C:\Users\HP\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;C:\Users\HP\.m2\repository\io\cucumber\cucumber-testng\7.18.0\cucumber-testng-7.18.0.jar;C:\Users\HP\.m2\repository\org\testng\testng\7.10.2\testng-7.10.2.jar;C:\Users\HP\.m2\repository\org\slf4j\slf4j-api\1.7.36\slf4j-api-1.7.36.jar;C:\Users\HP\.m2\repository\com\beust\jcommander\1.82\jcommander-1.82.jar;C:\Users\HP\.m2\repository\org\webjars\jquery\3.7.1\jquery-3.7.1.jar;C:\Users\HP\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.17.1\jackson-databind-2.17.1.jar;C:\Users\HP\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.17.1\jackson-annotations-2.17.1.jar;C:\Users\HP\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.17.1\jackson-core-2.17.1.jar;C:\Users\HP\.m2\repository\com\google\code\gson\gson\2.11.0\gson-2.11.0.jar;C:\Users\HP\.m2\repository\com\google\errorprone\error_prone_annotations\2.27.0\error_prone_annotations-2.27.0.jar;C:\Users\HP\.m2\repository\org\apache\logging\log4j\log4j-core\2.24.1\log4j-core-2.24.1.jar;C:\Users\HP\.m2\repository\org\apache\logging\log4j\log4j-api\2.24.1\log4j-api-2.24.1.jar;C:\Users\HP\.m2\repository\org\apache\logging\log4j\log4j-slf4j2-impl\2.24.1\log4j-slf4j2-impl-2.24.1.jar;C:\Users\HP\.m2\repository\org\json\json\20250107\json-20250107.jar;"/>
    <property name="java.vm.vendor" value="Oracle Corporation"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="user.variant" value=""/>
    <property name="java.vendor.url" value="https://java.oracle.com/"/>
    <property name="user.timezone" value="Asia/Calcutta"/>
    <property name="os.name" value="Windows 10"/>
    <property name="java.vm.specification.version" value="24"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="user.country" value="IN"/>
    <property name="sun.boot.library.path" value="C:\Program Files\Java\jdk-24\bin"/>
    <property name="sun.java.command" value="C:\Program Files\KMSpico\temp\surefire12560302842860368172\surefirebooter-20251001142508915_3.jar C:\Program Files\KMSpico\temp\surefire12560302842860368172 2025-10-01T14-25-08_421-jvmRun1 surefire-20251001142508915_1tmp surefire_0-20251001142508915_2tmp"/>
    <property name="jdk.debug" value="release"/>
    <property name="surefire.test.class.path" value="C:\Users\HP\IdeaProjects\API_Testing_Kata\target\test-classes;C:\Users\HP\IdeaProjects\API_Testing_Kata\target\classes;C:\Users\HP\.m2\repository\io\rest-assured\rest-assured\5.5.5\rest-assured-5.5.5.jar;C:\Users\HP\.m2\repository\org\apache\groovy\groovy\4.0.22\groovy-4.0.22.jar;C:\Users\HP\.m2\repository\org\apache\groovy\groovy-xml\4.0.22\groovy-xml-4.0.22.jar;C:\Users\HP\.m2\repository\org\apache\httpcomponents\httpclient\4.5.13\httpclient-4.5.13.jar;C:\Users\HP\.m2\repository\org\apache\httpcomponents\httpcore\4.4.13\httpcore-4.4.13.jar;C:\Users\HP\.m2\repository\commons-logging\commons-logging\1.2\commons-logging-1.2.jar;C:\Users\HP\.m2\repository\commons-codec\commons-codec\1.11\commons-codec-1.11.jar;C:\Users\HP\.m2\repository\org\apache\httpcomponents\httpmime\4.5.13\httpmime-4.5.13.jar;C:\Users\HP\.m2\repository\org\hamcrest\hamcrest\2.2\hamcrest-2.2.jar;C:\Users\HP\.m2\repository\org\ccil\cowan\tagsoup\tagsoup\1.2.1\tagsoup-1.2.1.jar;C:\Users\HP\.m2\repository\io\rest-assured\json-path\5.5.5\json-path-5.5.5.jar;C:\Users\HP\.m2\repository\org\apache\groovy\groovy-json\4.0.22\groovy-json-4.0.22.jar;C:\Users\HP\.m2\repository\io\rest-assured\rest-assured-common\5.5.5\rest-assured-common-5.5.5.jar;C:\Users\HP\.m2\repository\io\rest-assured\xml-path\5.5.5\xml-path-5.5.5.jar;C:\Users\HP\.m2\repository\org\apache\commons\commons-lang3\3.16.0\commons-lang3-3.16.0.jar;C:\Users\HP\.m2\repository\io\rest-assured\json-schema-validator\5.5.5\json-schema-validator-5.5.5.jar;C:\Users\HP\.m2\repository\com\github\java-json-tools\json-schema-validator\2.2.14\json-schema-validator-2.2.14.jar;C:\Users\HP\.m2\repository\com\github\java-json-tools\jackson-coreutils-equivalence\1.0\jackson-coreutils-equivalence-1.0.jar;C:\Users\HP\.m2\repository\com\github\java-json-tools\jackson-coreutils\2.0\jackson-coreutils-2.0.jar;C:\Users\HP\.m2\repository\com\github\java-json-tools\msg-simple\1.2\msg-simple-1.2.jar;C:\Users\HP\.m2\repository\com\github\java-json-tools\btf\1.3\btf-1.3.jar;C:\Users\HP\.m2\repository\com\github\java-json-tools\json-schema-core\1.2.14\json-schema-core-1.2.14.jar;C:\Users\HP\.m2\repository\com\github\java-json-tools\uri-template\0.10\uri-template-0.10.jar;C:\Users\HP\.m2\repository\org\mozilla\rhino\1.7.7.2\rhino-1.7.7.2.jar;C:\Users\HP\.m2\repository\com\sun\mail\mailapi\1.6.2\mailapi-1.6.2.jar;C:\Users\HP\.m2\repository\joda-time\joda-time\2.10.5\joda-time-2.10.5.jar;C:\Users\HP\.m2\repository\com\googlecode\libphonenumber\libphonenumber\8.11.1\libphonenumber-8.11.1.jar;C:\Users\HP\.m2\repository\com\google\code\findbugs\jsr305\3.0.2\jsr305-3.0.2.jar;C:\Users\HP\.m2\repository\net\sf\jopt-simple\jopt-simple\5.0.4\jopt-simple-5.0.4.jar;C:\Users\HP\.m2\repository\com\google\guava\guava\33.2.1-jre\guava-33.2.1-jre.jar;C:\Users\HP\.m2\repository\com\google\guava\failureaccess\1.0.2\failureaccess-1.0.2.jar;C:\Users\HP\.m2\repository\com\google\guava\listenablefuture\9999.0-empty-to-avoid-conflict-with-guava\listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar;C:\Users\HP\.m2\repository\org\checkerframework\checker-qual\3.42.0\checker-qual-3.42.0.jar;C:\Users\HP\.m2\repository\com\google\j2objc\j2objc-annotations\3.0.0\j2objc-annotations-3.0.0.jar;C:\Users\HP\.m2\repository\io\cucumber\cucumber-java\7.18.0\cucumber-java-7.18.0.jar;C:\Users\HP\.m2\repository\io\cucumber\cucumber-core\7.18.0\cucumber-core-7.18.0.jar;C:\Users\HP\.m2\repository\io\cucumber\cucumber-gherkin\7.18.0\cucumber-gherkin-7.18.0.jar;C:\Users\HP\.m2\repository\io\cucumber\cucumber-gherkin-messages\7.18.0\cucumber-gherkin-messages-7.18.0.jar;C:\Users\HP\.m2\repository\io\cucumber\gherkin\28.0.0\gherkin-28.0.0.jar;C:\Users\HP\.m2\repository\io\cucumber\messages\24.1.0\messages-24.1.0.jar;C:\Users\HP\.m2\repository\io\cucumber\testng-xml-formatter\0.1.0\testng-xml-formatter-0.1.0.jar;C:\Users\HP\.m2\repository\io\cucumber\query\12.2.0\query-12.2.0.jar;C:\Users\HP\.m2\repository\io\cucumber\tag-expressions\6.1.0\tag-expressions-6.1.0.jar;C:\Users\HP\.m2\repository\io\cucumber\cucumber-expressions\17.1.0\cucumber-expressions-17.1.0.jar;C:\Users\HP\.m2\repository\io\cucumber\datatable\7.18.0\datatable-7.18.0.jar;C:\Users\HP\.m2\repository\io\cucumber\cucumber-plugin\7.18.0\cucumber-plugin-7.18.0.jar;C:\Users\HP\.m2\repository\io\cucumber\docstring\7.18.0\docstring-7.18.0.jar;C:\Users\HP\.m2\repository\io\cucumber\html-formatter\21.3.1\html-formatter-21.3.1.jar;C:\Users\HP\.m2\repository\io\cucumber\junit-xml-formatter\0.4.0\junit-xml-formatter-0.4.0.jar;C:\Users\HP\.m2\repository\io\cucumber\ci-environment\10.0.1\ci-environment-10.0.1.jar;C:\Users\HP\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;C:\Users\HP\.m2\repository\io\cucumber\cucumber-testng\7.18.0\cucumber-testng-7.18.0.jar;C:\Users\HP\.m2\repository\org\testng\testng\7.10.2\testng-7.10.2.jar;C:\Users\HP\.m2\repository\org\slf4j\slf4j-api\1.7.36\slf4j-api-1.7.36.jar;C:\Users\HP\.m2\repository\com\beust\jcommander\1.82\jcommander-1.82.jar;C:\Users\HP\.m2\repository\org\webjars\jquery\3.7.1\jquery-3.7.1.jar;C:\Users\HP\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.17.1\jackson-databind-2.17.1.jar;C:\Users\HP\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.17.1\jackson-annotations-2.17.1.jar;C:\Users\HP\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.17.1\jackson-core-2.17.1.jar;C:\Users\HP\.m2\repository\com\google\code\gson\gson\2.11.0\gson-2.11.0.jar;C:\Users\HP\.m2\repository\com\google\errorprone\error_prone_annotations\2.27.0\error_prone_annotations-2.27.0.jar;C:\Users\HP\.m2\repository\org\apache\logging\log4j\log4j-core\2.24.1\log4j-core-2.24.1.jar;C:\Users\HP\.m2\repository\org\apache\logging\log4j\log4j-api\2.24.1\log4j-api-2.24.1.jar;C:\Users\HP\.m2\repository\org\apache\logging\log4j\log4j-slf4j2-impl\2.24.1\log4j-slf4j2-impl-2.24.1.jar;C:\Users\HP\.m2\repository\org\json\json\20250107\json-20250107.jar;"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="user.home" value="C:\Users\HP"/>
    <property name="user.language" value="en"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="java.version.date" value="2025-07-15"/>
    <property name="java.home" value="C:\Program Files\Java\jdk-24"/>
    <property name="file.separator" value="\"/>
    <property name="basedir" value="C:\Users\HP\IdeaProjects\API_Testing_Kata"/>
    <property name="java.vm.compressedOopsMode" value="32-bit"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="surefire.real.class.path" value="C:\Program Files\KMSpico\temp\surefire12560302842860368172\surefirebooter-20251001142508915_3.jar"/>
    <property name="user.script" value=""/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="java.runtime.version" value="24.0.2+12-54"/>
    <property name="user.name" value="HP"/>
    <property name="stdout.encoding" value="Cp1252"/>
    <property name="path.separator" value=";"/>
    <property name="os.version" value="10.0"/>
    <property name="java.runtime.name" value="Java(TM) SE Runtime Environment"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="java.vm.name" value="Java HotSpot(TM) 64-Bit Server VM"/>
    <property name="localRepository" value="C:\Users\HP\.m2\repository"/>
    <property name="java.vendor.url.bug" value="https://bugreport.java.com/bugreport/"/>
    <property name="java.io.tmpdir" value="C:\PROGRA~1\KMSpico\temp\"/>
    <property name="java.version" value="24.0.2"/>
    <property name="user.dir" value="C:\Users\HP\IdeaProjects\API_Testing_Kata"/>
    <property name="os.arch" value="amd64"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="sun.os.patch.level" value=""/>
    <property name="native.encoding" value="Cp1252"/>
    <property name="java.library.path" value="C:\Program Files\Java\jdk-24\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\nodejs\;C:\Program Files\Java\jdk-24\bin;C:\apache-maven-3.9.9\apache-maven-3.9.11\bin;C:\Program Files\Git\cmd;C:\Users\HP\AppData\Local\Microsoft\WindowsApps;C:\Users\HP\AppData\Roaming\npm;C:\Users\HP\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files\JetBrains\IntelliJ IDEA 2025.2.1\bin;."/>
    <property name="java.vm.info" value="mixed mode, sharing"/>
    <property name="stderr.encoding" value="Cp1252"/>
    <property name="java.vendor" value="Oracle Corporation"/>
    <property name="java.vm.version" value="24.0.2+12-54"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="java.class.version" value="68.0"/>
  </properties>
  <testcase name="runScenario[&quot;Delete the booking as admin&quot;, &quot;Delete the booking&quot;](1)" classname="com.booking.TestRunner" time="22.306">
    <system-out><![CDATA[
@HotelBooking @Deletebookinghappyflow
Scenario Outline: Delete the booking as admin                                              # src/test/resources/features/DeleteBooking.feature:26
  Given the user hits the endpoint "api/auth/login"                                        # com.booking.stepdefinitions.Bookingsteps.user_hits_the_endpoint(java.lang.String)
  When user logs in as admin generates token and authenticate using "admin" and "password" # com.booking.stepdefinitions.Bookingsteps.user_logs_asadmin_generates_token(java.lang.String,java.lang.String)
Response status code200
  Then Verify the response status code as 200                                              # com.booking.stepdefinitions.Bookingsteps.verify_response_code(int)
  Given the user hits the endpoint "api/booking"                                           # com.booking.stepdefinitions.Bookingsteps.user_hits_the_endpoint(java.lang.String)
Request Body:
{
  "roomid" : 2,
  "depositpaid" : false,
  "email" : "rathgathesh@tcs.com",
  "phone" : "07907945853",
  "bookingid" : 0,
  "lastname" : "Jathesh",
  "bookingdates" : {
    "checkin" : "2025-11-14",
    "checkout" : "2025-11-15"
  },
  "firstname" : "Rathesh"
}
  When user provides the details and books the room with                                   # com.booking.stepdefinitions.Bookingsteps.user_provide_details_bookstheroom(io.cucumber.datatable.DataTable)
    | fname   | lname   | email               | phone       | checkin    | checkout   |
    | Rathesh | Jathesh | rathgathesh@tcs.com | 07907945853 | 2025-11-14 | 2025-11-15 |
Response status code201
  Then Verify the response status code as 201                                              # com.booking.stepdefinitions.Bookingsteps.verify_response_code(int)
  Given the user hits the endpoint "api/booking"                                           # com.booking.stepdefinitions.Bookingsteps.user_hits_the_endpoint(java.lang.String)
Booking ID of the booked room = 2
  When user logs in as admin and request details by roomid                                 # com.booking.stepdefinitions.Bookingsteps.user_logsasadmin_requestby_roomid()
Response status code200
  Then Verify the response status code as 200                                              # com.booking.stepdefinitions.Bookingsteps.verify_response_code(int)
  Given the user hits the endpoint "api/booking/"                                          # com.booking.stepdefinitions.Bookingsteps.user_hits_the_endpoint(java.lang.String)
api/booking/2
  When admin deletes the booking using booking id                                          # com.booking.stepdefinitions.Bookingsteps.admin_deletes_booking_using_bookingid()
Response status code200
  Then Verify the response status code as 200                                              # com.booking.stepdefinitions.Bookingsteps.verify_response_code(int)
]]></system-out>
    <system-err><![CDATA[SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
]]></system-err>
  </testcase>
  <testcase name="runScenario[&quot;Testing end to end flow as a admin&quot;, &quot;Testing end to end flow as admin&quot;](2)" classname="com.booking.TestRunner" time="2.266">
    <system-out><![CDATA[
@HotelBooking
Scenario Outline: Testing end to end flow as a admin                                       # src/test/resources/features/E2EAdmin.feature:29
  Given the user hits the endpoint "api/auth/login"                                        # com.booking.stepdefinitions.Bookingsteps.user_hits_the_endpoint(java.lang.String)
  When user logs in as admin generates token and authenticate using "admin" and "password" # com.booking.stepdefinitions.Bookingsteps.user_logs_asadmin_generates_token(java.lang.String,java.lang.String)
Response status code200
  Then Verify the response status code as 200                                              # com.booking.stepdefinitions.Bookingsteps.verify_response_code(int)
  Given the user hits the endpoint "api/booking"                                           # com.booking.stepdefinitions.Bookingsteps.user_hits_the_endpoint(java.lang.String)
Request Body:
{
  "roomid" : 3,
  "depositpaid" : false,
  "email" : "ridhasidh@tcs.com",
  "phone" : "07907946852",
  "bookingid" : 0,
  "lastname" : "Sidhan",
  "bookingdates" : {
    "checkin" : "2025-11-13",
    "checkout" : "2025-11-14"
  },
  "firstname" : "Rithan"
}
  When user provides the details and books the room with                                   # com.booking.stepdefinitions.Bookingsteps.user_provide_details_bookstheroom(io.cucumber.datatable.DataTable)
    | fname  | lname  | email             | phone       | checkin    | checkout   |
    | Rithan | Sidhan | ridhasidh@tcs.com | 07907946852 | 2025-11-13 | 2025-11-14 |
Response status code201
  Then Verify the response status code as 201                                              # com.booking.stepdefinitions.Bookingsteps.verify_response_code(int)
  Given the user hits the endpoint "api/booking"                                           # com.booking.stepdefinitions.Bookingsteps.user_hits_the_endpoint(java.lang.String)
Booking ID of the booked room = 3
  When user logs in as admin and request details by roomid                                 # com.booking.stepdefinitions.Bookingsteps.user_logsasadmin_requestby_roomid()
Response status code200
  Then Verify the response status code as 200                                              # com.booking.stepdefinitions.Bookingsteps.verify_response_code(int)
  Given the user hits the endpoint "api/booking/"                                          # com.booking.stepdefinitions.Bookingsteps.user_hits_the_endpoint(java.lang.String)
Request Body:
{
  "roomid" : 2,
  "depositpaid" : false,
  "email" : "premsagar@gmail.com",
  "phone" : "09876543212",
  "bookingid" : 3,
  "lastname" : "Sagar1",
  "bookingdates" : {
    "checkin" : "2025-10-18",
    "checkout" : "2025-10-19"
  },
  "firstname" : "BNPP"
}
api/booking/3
  When admin edits the room details                                                        # com.booking.stepdefinitions.Bookingsteps.admin_edits_room_details(io.cucumber.datatable.DataTable)
    | fname | lname  | email               | phone       | checkin    | checkout   |
    | BNPP  | Sagar1 | premsagar@gmail.com | 09876543212 | 2025-10-18 | 2025-10-19 |
Response status code200
  Then Verify the response status code as 200                                              # com.booking.stepdefinitions.Bookingsteps.verify_response_code(int)
api/booking/3
  When admin deletes the booking using booking id                                          # com.booking.stepdefinitions.Bookingsteps.admin_deletes_booking_using_bookingid()
Response status code200
  Then Verify the response status code as 200                                              # com.booking.stepdefinitions.Bookingsteps.verify_response_code(int)
]]></system-out>
  </testcase>
  <testcase name="runScenario[&quot;Get list of rooms by roomid&quot;, &quot;Get list of rooms by roomid for booking&quot;](3)" classname="com.booking.TestRunner" time="0.409">
    <system-out><![CDATA[
@HotelBooking @getlistofroomsbyroomidhappyflow
Scenario Outline: Get list of rooms by roomid             # src/test/resources/features/GetByRoomId.feature:12
  Given the user hits the endpoint "api/room/"            # com.booking.stepdefinitions.Bookingsteps.user_hits_the_endpoint(java.lang.String)
  When the user sends a GET request by passing roomid "2" # com.booking.stepdefinitions.Bookingsteps.user_sends_GET_request_passing_roomid(java.lang.String)
Response status code200
  Then Verify the response status code as 200             # com.booking.stepdefinitions.Bookingsteps.verify_response_code(int)
]]></system-out>
  </testcase>
  <testcase name="runScenario[&quot;Get list of rooms by roomid&quot;, &quot;Get list of rooms by roomid for booking&quot;](4)" classname="com.booking.TestRunner" time="1.054">
    <system-out><![CDATA[
@HotelBooking @invalidroomid
Scenario Outline: Get list of rooms by roomid             # src/test/resources/features/GetByRoomId.feature:22
  Given the user hits the endpoint "api/room/"            # com.booking.stepdefinitions.Bookingsteps.user_hits_the_endpoint(java.lang.String)
  When the user sends a GET request by passing roomid "a" # com.booking.stepdefinitions.Bookingsteps.user_sends_GET_request_passing_roomid(java.lang.String)
Response status code404
  Then Verify the response status code as 404             # com.booking.stepdefinitions.Bookingsteps.verify_response_code(int)
]]></system-out>
  </testcase>
  <testcase name="runScenario[&quot;Get list of rooms by roomid&quot;, &quot;Get list of rooms by roomid for booking&quot;](5)" classname="com.booking.TestRunner" time="32.355">
    <system-out><![CDATA[
@HotelBooking @roomiddoesnotexist
Scenario Outline: Get list of rooms by roomid               # src/test/resources/features/GetByRoomId.feature:32
  Given the user hits the endpoint "api/room/"              # com.booking.stepdefinitions.Bookingsteps.user_hits_the_endpoint(java.lang.String)
  When the user sends a GET request by passing roomid "114" # com.booking.stepdefinitions.Bookingsteps.user_sends_GET_request_passing_roomid(java.lang.String)
Response status code500
  Then Verify the response status code as 500               # com.booking.stepdefinitions.Bookingsteps.verify_response_code(int)
]]></system-out>
  </testcase>
  <testcase name="runScenario[&quot;Get list of rooms by roomid&quot;, &quot;Get list of rooms by roomid for booking&quot;](6)" classname="com.booking.TestRunner" time="1.307">
    <system-out><![CDATA[
@HotelBooking @emptyroomid
Scenario Outline: Get list of rooms by roomid            # src/test/resources/features/GetByRoomId.feature:42
  Given the user hits the endpoint "api/room/"           # com.booking.stepdefinitions.Bookingsteps.user_hits_the_endpoint(java.lang.String)
  When the user sends a GET request by passing roomid "" # com.booking.stepdefinitions.Bookingsteps.user_sends_GET_request_passing_roomid(java.lang.String)
Response status code200
  Then Verify the response status code as 200            # com.booking.stepdefinitions.Bookingsteps.verify_response_code(int)
]]></system-out>
  </testcase>
  <testcase name="runScenario[&quot;Get list of rooms availabe for booking&quot;, &quot;Get list of rooms available for booking&quot;](7)" classname="com.booking.TestRunner" time="2.986">
    <system-out><![CDATA[
@HotelBooking @getlistofrooms
Scenario Outline: Get list of rooms availabe for booking                      # src/test/resources/features/GetListofRooms.feature:13
  Given the user hits the endpoint "api/room"                                 # com.booking.stepdefinitions.Bookingsteps.user_hits_the_endpoint(java.lang.String)
  When the user sends a GET request to the room api                           # com.booking.stepdefinitions.Bookingsteps.user_sends_GET_request_roomapi()
Response status code200
  Then Verify the response status code as 200                                 # com.booking.stepdefinitions.Bookingsteps.verify_response_code(int)
  And the response should match the JSON schema "schemas/getlistofrooms.json" # com.booking.stepdefinitions.Bookingsteps.response_matches_jsonschema(java.lang.String)
]]></system-out>
  </testcase>
  <testcase name="runScenario[&quot;Get available rooms for the given dates&quot;, &quot;Get the room availability for the particular dates&quot;](8)" classname="com.booking.TestRunner" time="1.623">
    <system-out><![CDATA[
@HotelBooking @getroomavailability
Scenario Outline: Get available rooms for the given dates                          # src/test/resources/features/GetRoomAvailability.feature:13
  Given the user hits the endpoint "api/room"                                      # com.booking.stepdefinitions.Bookingsteps.user_hits_the_endpoint(java.lang.String)
  When user provides queryparam from "2025-10-04" and "2025-10-05"                 # com.booking.stepdefinitions.Bookingsteps.user_provides_queryparam(java.lang.String,java.lang.String)
Response status code200
  Then Verify the response status code as 200                                      # com.booking.stepdefinitions.Bookingsteps.verify_response_code(int)
  And the response should match the JSON schema "schemas/getroomavailability.json" # com.booking.stepdefinitions.Bookingsteps.response_matches_jsonschema(java.lang.String)
]]></system-out>
  </testcase>
  <testcase name="runScenario[&quot;Edit the booking details&quot;, &quot;Edit the booking details by logging  as admin&quot;](9)" classname="com.booking.TestRunner" time="2.368">
    <system-out><![CDATA[
@HotelBooking @happyflowwithallfields
Scenario Outline: Edit the booking details                                                 # src/test/resources/features/UpdateBooking.feature:29
  Given the user hits the endpoint "api/auth/login"                                        # com.booking.stepdefinitions.Bookingsteps.user_hits_the_endpoint(java.lang.String)
  When user logs in as admin generates token and authenticate using "admin" and "password" # com.booking.stepdefinitions.Bookingsteps.user_logs_asadmin_generates_token(java.lang.String,java.lang.String)
Response status code200
  Then Verify the response status code as 200                                              # com.booking.stepdefinitions.Bookingsteps.verify_response_code(int)
  Given the user hits the endpoint "api/booking"                                           # com.booking.stepdefinitions.Bookingsteps.user_hits_the_endpoint(java.lang.String)
Request Body:
{
  "roomid" : 2,
  "depositpaid" : false,
  "email" : "bnppaccount@mail.com",
  "phone" : "07907945853",
  "bookingid" : 0,
  "lastname" : "accounta",
  "bookingdates" : {
    "checkin" : "2025-11-10",
    "checkout" : "2025-11-11"
  },
  "firstname" : "BNPPa"
}
  When user provides the details and books the room with                                   # com.booking.stepdefinitions.Bookingsteps.user_provide_details_bookstheroom(io.cucumber.datatable.DataTable)
    | fname | lname    | email                | phone       | checkin    | checkout   |
    | BNPPa | accounta | bnppaccount@mail.com | 07907945853 | 2025-11-10 | 2025-11-11 |
Response status code201
  Then Verify the response status code as 201                                              # com.booking.stepdefinitions.Bookingsteps.verify_response_code(int)
  Given the user hits the endpoint "api/booking"                                           # com.booking.stepdefinitions.Bookingsteps.user_hits_the_endpoint(java.lang.String)
Booking ID of the booked room = 4
  When user logs in as admin and request details by roomid                                 # com.booking.stepdefinitions.Bookingsteps.user_logsasadmin_requestby_roomid()
Response status code200
  Then Verify the response status code as 200                                              # com.booking.stepdefinitions.Bookingsteps.verify_response_code(int)
  Given the user hits the endpoint "api/booking/"                                          # com.booking.stepdefinitions.Bookingsteps.user_hits_the_endpoint(java.lang.String)
Request Body:
{
  "roomid" : 3,
  "depositpaid" : false,
  "email" : "premsagar@gmail.com",
  "phone" : "09876543212",
  "bookingid" : 4,
  "lastname" : "Sagar1",
  "bookingdates" : {
    "checkin" : "2025-10-18",
    "checkout" : "2025-10-19"
  },
  "firstname" : "Prem1"
}
api/booking/4
  When admin edits the room details                                                        # com.booking.stepdefinitions.Bookingsteps.admin_edits_room_details(io.cucumber.datatable.DataTable)
    | fname | lname  | email               | phone       | checkin    | checkout   |
    | Prem1 | Sagar1 | premsagar@gmail.com | 09876543212 | 2025-10-18 | 2025-10-19 |
Response status code200
  Then Verify the response status code as 200                                              # com.booking.stepdefinitions.Bookingsteps.verify_response_code(int)
]]></system-out>
  </testcase>
  <testcase name="runScenario[&quot;Edit the booking details&quot;, &quot;Edit the booking details by logging  as admin&quot;](10)" classname="com.booking.TestRunner" time="1.994">
    <system-out><![CDATA[
@HotelBooking @MissingmandatoryfieldsinEditBooking
Scenario Outline: Edit the booking details                                                      # src/test/resources/features/UpdateBooking.feature:50
  Given the user hits the endpoint "api/auth/login"                                             # com.booking.stepdefinitions.Bookingsteps.user_hits_the_endpoint(java.lang.String)
  When user logs in as admin generates token and authenticate using "admin" and "password"      # com.booking.stepdefinitions.Bookingsteps.user_logs_asadmin_generates_token(java.lang.String,java.lang.String)
Response status code200
  Then Verify the response status code as 200                                                   # com.booking.stepdefinitions.Bookingsteps.verify_response_code(int)
  Given the user hits the endpoint "api/booking"                                                # com.booking.stepdefinitions.Bookingsteps.user_hits_the_endpoint(java.lang.String)
Request Body:
{
  "roomid" : 3,
  "depositpaid" : false,
  "email" : "premsagar@tcs.com",
  "phone" : "07907945852",
  "bookingid" : 0,
  "lastname" : "Ruth",
  "bookingdates" : {
    "checkin" : "2025-11-16",
    "checkout" : "2025-11-17"
  },
  "firstname" : "Prabhu"
}
  When user provides the details and books the room with                                        # com.booking.stepdefinitions.Bookingsteps.user_provide_details_bookstheroom(io.cucumber.datatable.DataTable)
    | fname  | lname | email             | phone       | checkin    | checkout   |
    | Prabhu | Ruth  | premsagar@tcs.com | 07907945852 | 2025-11-16 | 2025-11-17 |
Response status code201
  Then Verify the response status code as 201                                                   # com.booking.stepdefinitions.Bookingsteps.verify_response_code(int)
  Given the user hits the endpoint "api/booking"                                                # com.booking.stepdefinitions.Bookingsteps.user_hits_the_endpoint(java.lang.String)
Booking ID of the booked room = 5
  When user logs in as admin and request details by roomid                                      # com.booking.stepdefinitions.Bookingsteps.user_logsasadmin_requestby_roomid()
Response status code200
  Then Verify the response status code as 200                                                   # com.booking.stepdefinitions.Bookingsteps.verify_response_code(int)
  Given the user hits the endpoint "api/booking/"                                               # com.booking.stepdefinitions.Bookingsteps.user_hits_the_endpoint(java.lang.String)
Request Body:
{
  "roomid" : 2,
  "depositpaid" : false,
  "email" : "premsagar@gmail.com",
  "phone" : "09876543212",
  "bookingid" : 5,
  "lastname" : "Ruth",
  "bookingdates" : {
    "checkin" : "2025-10-18",
    "checkout" : "2025-10-19"
  },
  "firstname" : null
}
api/booking/5
  When admin edits the room details                                                             # com.booking.stepdefinitions.Bookingsteps.admin_edits_room_details(io.cucumber.datatable.DataTable)
    | fnameedit | lname | email               | phone       | checkin    | checkout   |
    | [empty]   | Ruth  | premsagar@gmail.com | 09876543212 | 2025-10-18 | 2025-10-19 |
Actual MessageFirstname should not be blank
  Then Verify the response status code as 400 and error message "Firstname should not be blank" # com.booking.stepdefinitions.Bookingsteps.verify_response_code_errorMessage(int,java.lang.String)
]]></system-out>
  </testcase>
  <testcase name="runScenario[&quot;Create a room booking&quot;, &quot;Create Room Booking for the particular dates&quot;](11)" classname="com.booking.TestRunner" time="0.743">
    <system-out><![CDATA[
@HotelBooking @CreateroomBookinghappyflow
Scenario Outline: Create a room booking                  # src/test/resources/features/createBooking.feature:16
  Given the user hits the endpoint "api/booking"         # com.booking.stepdefinitions.Bookingsteps.user_hits_the_endpoint(java.lang.String)
Request Body:
{
  "roomid" : 2,
  "depositpaid" : false,
  "email" : "prema@tcs.com",
  "phone" : "07907945852",
  "bookingid" : 0,
  "lastname" : "Nimal",
  "bookingdates" : {
    "checkin" : "2025-11-11",
    "checkout" : "2025-11-12"
  },
  "firstname" : "Yadav"
}
  When user provides the details and books the room with # com.booking.stepdefinitions.Bookingsteps.user_provide_details_bookstheroom(io.cucumber.datatable.DataTable)
    | fname | lname | email         | phone       | checkin    | checkout   |
    | Yadav | Nimal | prema@tcs.com | 07907945852 | 2025-11-11 | 2025-11-12 |
Response status code201
  Then Verify the response status code as 201            # com.booking.stepdefinitions.Bookingsteps.verify_response_code(int)
]]></system-out>
  </testcase>
  <testcase name="runScenario[&quot;Error validation while booking the room&quot;, &quot;Create Room Booking for the particular dates&quot;](12)" classname="com.booking.TestRunner" time="0.476">
    <system-out><![CDATA[
@HotelBooking @Missingmandatoryfields
Scenario Outline: Error validation while booking the room                                       # src/test/resources/features/createBooking.feature:33
  Given the user hits the endpoint "api/booking"                                                # com.booking.stepdefinitions.Bookingsteps.user_hits_the_endpoint(java.lang.String)
Request Body:
{
  "roomid" : 1,
  "depositpaid" : false,
  "email" : "user1@tcs.com",
  "phone" : "09445676317",
  "bookingid" : 0,
  "lastname" : "userlastname1",
  "bookingdates" : {
    "checkin" : "2025-10-09",
    "checkout" : "2025-10-10"
  },
  "firstname" : null
}
  When user provides the details and books the room with                                        # com.booking.stepdefinitions.Bookingsteps.user_provide_details_bookstheroom(io.cucumber.datatable.DataTable)
    | fname   | lname         | email         | phone       | checkin    | checkout   |
    | [empty] | userlastname1 | user1@tcs.com | 09445676317 | 2025-10-09 | 2025-10-10 |
Actual MessageFirstname should not be blank
  Then Verify the response status code as 400 and error message "Firstname should not be blank" # com.booking.stepdefinitions.Bookingsteps.verify_response_code_errorMessage(int,java.lang.String)
]]></system-out>
  </testcase>
  <testcase name="runScenario[&quot;Error validation while booking the room&quot;, &quot;Create Room Booking for the particular dates&quot;](13)" classname="com.booking.TestRunner" time="0.469">
    <system-out><![CDATA[
@HotelBooking @Missingmandatoryfields
Scenario Outline: Error validation while booking the room                                      # src/test/resources/features/createBooking.feature:34
  Given the user hits the endpoint "api/booking"                                               # com.booking.stepdefinitions.Bookingsteps.user_hits_the_endpoint(java.lang.String)
Request Body:
{
  "roomid" : 3,
  "depositpaid" : false,
  "email" : "user2@tcs.com",
  "phone" : "09445676317",
  "bookingid" : 0,
  "lastname" : null,
  "bookingdates" : {
    "checkin" : "2025-10-10",
    "checkout" : "2025-10-11"
  },
  "firstname" : "userfirstname2"
}
  When user provides the details and books the room with                                       # com.booking.stepdefinitions.Bookingsteps.user_provide_details_bookstheroom(io.cucumber.datatable.DataTable)
    | fname          | lname   | email         | phone       | checkin    | checkout   |
    | userfirstname2 | [empty] | user2@tcs.com | 09445676317 | 2025-10-10 | 2025-10-11 |
Actual MessageLastname should not be blank
  Then Verify the response status code as 400 and error message "Lastname should not be blank" # com.booking.stepdefinitions.Bookingsteps.verify_response_code_errorMessage(int,java.lang.String)
]]></system-out>
  </testcase>
  <testcase name="runScenario[&quot;Error validation while booking the room&quot;, &quot;Create Room Booking for the particular dates&quot;](14)" classname="com.booking.TestRunner" time="0.477">
    <system-out><![CDATA[
@HotelBooking @Missingmandatoryfields
Scenario Outline: Error validation while booking the room                          # src/test/resources/features/createBooking.feature:35
  Given the user hits the endpoint "api/booking"                                   # com.booking.stepdefinitions.Bookingsteps.user_hits_the_endpoint(java.lang.String)
Request Body:
{
  "roomid" : 3,
  "depositpaid" : false,
  "email" : "user3@tcs.com",
  "phone" : "09445676317",
  "bookingid" : 0,
  "lastname" : "userlastname3",
  "bookingdates" : {
    "checkin" : null,
    "checkout" : "2025-10-13"
  },
  "firstname" : "userfirstname3"
}
  When user provides the details and books the room with                           # com.booking.stepdefinitions.Bookingsteps.user_provide_details_bookstheroom(io.cucumber.datatable.DataTable)
    | fname          | lname         | email         | phone       | checkin | checkout   |
    | userfirstname3 | userlastname3 | user3@tcs.com | 09445676317 | [empty] | 2025-10-13 |
Actual Messagemust not be null
  Then Verify the response status code as 400 and error message "must not be null" # com.booking.stepdefinitions.Bookingsteps.verify_response_code_errorMessage(int,java.lang.String)
]]></system-out>
  </testcase>
  <testcase name="runScenario[&quot;Error validation while booking the room&quot;, &quot;Create Room Booking for the particular dates&quot;](15)" classname="com.booking.TestRunner" time="1.014">
    <system-out><![CDATA[
@HotelBooking @Missingmandatoryfields
Scenario Outline: Error validation while booking the room                          # src/test/resources/features/createBooking.feature:36
  Given the user hits the endpoint "api/booking"                                   # com.booking.stepdefinitions.Bookingsteps.user_hits_the_endpoint(java.lang.String)
Request Body:
{
  "roomid" : 2,
  "depositpaid" : false,
  "email" : "user4@tcs.com",
  "phone" : "09445676317",
  "bookingid" : 0,
  "lastname" : "userlastname4",
  "bookingdates" : {
    "checkin" : "2025-10-14",
    "checkout" : null
  },
  "firstname" : "userfirstname4"
}
  When user provides the details and books the room with                           # com.booking.stepdefinitions.Bookingsteps.user_provide_details_bookstheroom(io.cucumber.datatable.DataTable)
    | fname          | lname         | email         | phone       | checkin    | checkout |
    | userfirstname4 | userlastname4 | user4@tcs.com | 09445676317 | 2025-10-14 | [empty]  |
Actual Messagemust not be null
  Then Verify the response status code as 400 and error message "must not be null" # com.booking.stepdefinitions.Bookingsteps.verify_response_code_errorMessage(int,java.lang.String)
]]></system-out>
  </testcase>
  <testcase name="runScenario[&quot;Error validation while booking the room&quot;, &quot;Create Room Booking for the particular dates&quot;](16)" classname="com.booking.TestRunner" time="1.486">
    <system-out><![CDATA[
@HotelBooking @Missingmandatoryfields
Scenario Outline: Error validation while booking the room                                  # src/test/resources/features/createBooking.feature:37
  Given the user hits the endpoint "api/booking"                                           # com.booking.stepdefinitions.Bookingsteps.user_hits_the_endpoint(java.lang.String)
Request Body:
{
  "roomid" : 1,
  "depositpaid" : false,
  "email" : null,
  "phone" : "09445676317",
  "bookingid" : 0,
  "lastname" : "userlastname4",
  "bookingdates" : {
    "checkin" : "2025-10-14",
    "checkout" : "2025-10-15"
  },
  "firstname" : "userfirstname4"
}
  When user provides the details and books the room with                                   # com.booking.stepdefinitions.Bookingsteps.user_provide_details_bookstheroom(io.cucumber.datatable.DataTable)
    | fname          | lname         | email   | phone       | checkin    | checkout   |
    | userfirstname4 | userlastname4 | [empty] | 09445676317 | 2025-10-14 | 2025-10-15 |
Actual MessageFailed to create booking
  Then Verify the response status code as 400 and error message "Failed to create booking" # com.booking.stepdefinitions.Bookingsteps.verify_response_code_errorMessage(int,java.lang.String)
]]></system-out>
  </testcase>
  <testcase name="runScenario[&quot;Error validation while booking the room&quot;, &quot;Create Room Booking for the particular dates&quot;](17)" classname="com.booking.TestRunner" time="0.758">
    <system-out><![CDATA[
@HotelBooking @Missingmandatoryfields
Scenario Outline: Error validation while booking the room                                  # src/test/resources/features/createBooking.feature:38
  Given the user hits the endpoint "api/booking"                                           # com.booking.stepdefinitions.Bookingsteps.user_hits_the_endpoint(java.lang.String)
Request Body:
{
  "roomid" : 2,
  "depositpaid" : false,
  "email" : "user4@tcs.com",
  "phone" : null,
  "bookingid" : 0,
  "lastname" : "userlastname4",
  "bookingdates" : {
    "checkin" : "2025-10-14",
    "checkout" : "2025-10-15"
  },
  "firstname" : "userfirstname4"
}
  When user provides the details and books the room with                                   # com.booking.stepdefinitions.Bookingsteps.user_provide_details_bookstheroom(io.cucumber.datatable.DataTable)
    | fname          | lname         | email         | phone   | checkin    | checkout   |
    | userfirstname4 | userlastname4 | user4@tcs.com | [empty] | 2025-10-14 | 2025-10-15 |
Actual MessageFailed to create booking
  Then Verify the response status code as 400 and error message "Failed to create booking" # com.booking.stepdefinitions.Bookingsteps.verify_response_code_errorMessage(int,java.lang.String)
]]></system-out>
  </testcase>
  <testcase name="runScenario[&quot;Error validation while booking the room&quot;, &quot;Create Room Booking for the particular dates&quot;](18)" classname="com.booking.TestRunner" time="0.465">
    <system-out><![CDATA[
@HotelBooking @invalidfields
Scenario Outline: Error validation while booking the room                                        # src/test/resources/features/createBooking.feature:53
  Given the user hits the endpoint "api/booking"                                                 # com.booking.stepdefinitions.Bookingsteps.user_hits_the_endpoint(java.lang.String)
Request Body:
{
  "roomid" : 1,
  "depositpaid" : false,
  "email" : "user1@tcs.com",
  "phone" : "123456789",
  "bookingid" : 0,
  "lastname" : "userlastname1",
  "bookingdates" : {
    "checkin" : "2025-10-09",
    "checkout" : "2025-10-10"
  },
  "firstname" : "userfirstname1"
}
  When user provides the details and books the room with                                         # com.booking.stepdefinitions.Bookingsteps.user_provide_details_bookstheroom(io.cucumber.datatable.DataTable)
    | fname          | lname         | email         | phone     | checkin    | checkout   |
    | userfirstname1 | userlastname1 | user1@tcs.com | 123456789 | 2025-10-09 | 2025-10-10 |
Actual Messagesize must be between 11 and 21
  Then Verify the response status code as 400 and error message "size must be between 11 and 21" # com.booking.stepdefinitions.Bookingsteps.verify_response_code_errorMessage(int,java.lang.String)
]]></system-out>
  </testcase>
  <testcase name="runScenario[&quot;Error validation while booking the room&quot;, &quot;Create Room Booking for the particular dates&quot;](19)" classname="com.booking.TestRunner" time="0.5">
    <failure message="expected [must be a well-formed email address] but found [size must be between 11 and 21]" type="java.lang.AssertionError"><![CDATA[java.lang.AssertionError: expected [must be a well-formed email address] but found [size must be between 11 and 21]
	at org.testng.Assert.fail(Assert.java:111)
	at org.testng.Assert.failNotEquals(Assert.java:1578)
	at org.testng.Assert.assertEqualsImpl(Assert.java:150)
	at org.testng.Assert.assertEquals(Assert.java:132)
	at org.testng.Assert.assertEquals(Assert.java:656)
	at org.testng.Assert.assertEquals(Assert.java:666)
	at com.booking.stepdefinitions.Bookingsteps.verify_response_code_errorMessage(Bookingsteps.java:119)
	at ✽.Verify the response status code as 400 and error message "size must be between 11 and 21"(file:///C:/Users/HP/IdeaProjects/API_Testing_Kata/src/test/resources/features/createBooking.feature:49)
]]></failure>
    <system-out><![CDATA[
@HotelBooking @invalidfields
Scenario Outline: Error validation while booking the room                                        # src/test/resources/features/createBooking.feature:54
  Given the user hits the endpoint "api/booking"                                                 # com.booking.stepdefinitions.Bookingsteps.user_hits_the_endpoint(java.lang.String)
Request Body:
{
  "roomid" : 1,
  "depositpaid" : false,
  "email" : "user2tcs.com",
  "phone" : "1234567890",
  "bookingid" : 0,
  "lastname" : "userlastname1",
  "bookingdates" : {
    "checkin" : "2025-10-09",
    "checkout" : "2025-10-10"
  },
  "firstname" : "userfirstname1"
}
  When user provides the details and books the room with                                         # com.booking.stepdefinitions.Bookingsteps.user_provide_details_bookstheroom(io.cucumber.datatable.DataTable)
    | fname          | lname         | email        | phone      | checkin    | checkout   |
    | userfirstname1 | userlastname1 | user2tcs.com | 1234567890 | 2025-10-09 | 2025-10-10 |
Actual Messagemust be a well-formed email address
  Then Verify the response status code as 400 and error message "size must be between 11 and 21" # com.booking.stepdefinitions.Bookingsteps.verify_response_code_errorMessage(int,java.lang.String)
      java.lang.AssertionError: expected [must be a well-formed email address] but found [size must be between 11 and 21]
	at org.testng.Assert.fail(Assert.java:111)
	at org.testng.Assert.failNotEquals(Assert.java:1578)
	at org.testng.Assert.assertEqualsImpl(Assert.java:150)
	at org.testng.Assert.assertEquals(Assert.java:132)
	at org.testng.Assert.assertEquals(Assert.java:656)
	at org.testng.Assert.assertEquals(Assert.java:666)
	at com.booking.stepdefinitions.Bookingsteps.verify_response_code_errorMessage(Bookingsteps.java:119)
	at ✽.Verify the response status code as 400 and error message "size must be between 11 and 21"(file:///C:/Users/HP/IdeaProjects/API_Testing_Kata/src/test/resources/features/createBooking.feature:49)

]]></system-out>
  </testcase>
  <testcase name="runScenario[&quot;Error validation while booking the room&quot;, &quot;Create Room Booking for the particular dates&quot;](20)" classname="com.booking.TestRunner" time="0.467">
    <system-out><![CDATA[
@HotelBooking @invalidfields
Scenario Outline: Error validation while booking the room                                  # src/test/resources/features/createBooking.feature:55
  Given the user hits the endpoint "api/booking"                                           # com.booking.stepdefinitions.Bookingsteps.user_hits_the_endpoint(java.lang.String)
Request Body:
{
  "roomid" : 2,
  "depositpaid" : false,
  "email" : "user2@tcs.com",
  "phone" : "07907945672",
  "bookingid" : 0,
  "lastname" : "userlastname1",
  "bookingdates" : {
    "checkin" : "2025-10",
    "checkout" : "2025-10-10"
  },
  "firstname" : "userfirstname1"
}
  When user provides the details and books the room with                                   # com.booking.stepdefinitions.Bookingsteps.user_provide_details_bookstheroom(io.cucumber.datatable.DataTable)
    | fname          | lname         | email         | phone       | checkin | checkout   |
    | userfirstname1 | userlastname1 | user2@tcs.com | 07907945672 | 2025-10 | 2025-10-10 |
Actual MessageFailed to create booking
  Then Verify the response status code as 400 and error message "Failed to create booking" # com.booking.stepdefinitions.Bookingsteps.verify_response_code_errorMessage(int,java.lang.String)
]]></system-out>
  </testcase>
</testsuite>